public class stove/spring/example/ExampleApp {
	public fun <init> ()V
}

public final class stove/spring/example/ExampleAppKt {
	public static final fun main ([Ljava/lang/String;)V
	public static final fun run ([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/springframework/context/ConfigurableApplicationContext;
	public static synthetic fun run$default ([Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/context/ConfigurableApplicationContext;
}

public final class stove/spring/example/application/handlers/ProductCreateRequest {
	public fun <init> (JLjava/lang/String;J)V
	public final fun component1 ()J
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()J
	public final fun copy (JLjava/lang/String;J)Lstove/spring/example/application/handlers/ProductCreateRequest;
	public static synthetic fun copy$default (Lstove/spring/example/application/handlers/ProductCreateRequest;JLjava/lang/String;JILjava/lang/Object;)Lstove/spring/example/application/handlers/ProductCreateRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()J
	public final fun getName ()Ljava/lang/String;
	public final fun getSupplierId ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class stove/spring/example/application/handlers/ProductCreatedEvent {
	public fun <init> (JLjava/lang/String;JLjava/time/Instant;Ljava/lang/String;)V
	public synthetic fun <init> (JLjava/lang/String;JLjava/time/Instant;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()J
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()J
	public final fun component4 ()Ljava/time/Instant;
	public final fun component5 ()Ljava/lang/String;
	public final fun copy (JLjava/lang/String;JLjava/time/Instant;Ljava/lang/String;)Lstove/spring/example/application/handlers/ProductCreatedEvent;
	public static synthetic fun copy$default (Lstove/spring/example/application/handlers/ProductCreatedEvent;JLjava/lang/String;JLjava/time/Instant;Ljava/lang/String;ILjava/lang/Object;)Lstove/spring/example/application/handlers/ProductCreatedEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCreatedDate ()Ljava/time/Instant;
	public final fun getId ()J
	public final fun getName ()Ljava/lang/String;
	public final fun getSupplierId ()J
	public final fun getType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class stove/spring/example/application/handlers/ProductCreator {
	public field productCreatedTopic Ljava/lang/String;
	public fun <init> (Lstove/spring/example/infrastructure/http/SupplierHttpService;Lcom/couchbase/client/java/ReactiveCollection;Lcom/fasterxml/jackson/databind/ObjectMapper;Lstove/spring/example/infrastructure/messaging/kafka/KafkaProducer;)V
	public fun create (Lstove/spring/example/application/handlers/ProductCreateRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getProductCreatedTopic ()Ljava/lang/String;
	public fun setProductCreatedTopic (Ljava/lang/String;)V
}

public final class stove/spring/example/application/handlers/ProductCreatorKt {
	public static final fun mapToCreateRequest (Lstove/spring/example/infrastructure/messaging/kafka/consumers/CreateProductCommand;)Lstove/spring/example/application/handlers/ProductCreateRequest;
	public static final fun mapToProductCreatedEvent (Lstove/spring/example/application/handlers/ProductCreateRequest;)Lstove/spring/example/application/handlers/ProductCreatedEvent;
}

public final class stove/spring/example/application/services/SupplierPermission {
	public fun <init> (JZ)V
	public final fun component1 ()J
	public final fun component2 ()Z
	public final fun copy (JZ)Lstove/spring/example/application/services/SupplierPermission;
	public static synthetic fun copy$default (Lstove/spring/example/application/services/SupplierPermission;JZILjava/lang/Object;)Lstove/spring/example/application/services/SupplierPermission;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()J
	public fun hashCode ()I
	public final fun isAllowed ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class stove/spring/example/application/services/SupplierService {
	public abstract fun getSupplierPermission (JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class stove/spring/example/infrastructure/Defaults {
	public static final field AGENT_NAME Ljava/lang/String;
	public static final field INSTANCE Lstove/spring/example/infrastructure/Defaults;
	public static final field USER_EMAIL Ljava/lang/String;
	public final fun getHOST_NAME ()Ljava/lang/String;
}

public final class stove/spring/example/infrastructure/Headers {
	public static final field AGENT_NAME_KEY Ljava/lang/String;
	public static final field CORRELATION_ID_KEY Ljava/lang/String;
	public static final field EVENT_TYPE Ljava/lang/String;
	public static final field HOST_KEY Ljava/lang/String;
	public static final field INSTANCE Lstove/spring/example/infrastructure/Headers;
	public static final field MESSAGE_ID_KEY Ljava/lang/String;
	public static final field PUBLISHED_DATE_KEY Ljava/lang/String;
	public static final field USER_EMAIL_KEY Ljava/lang/String;
	public final fun getOrDefault (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun getOrDefault$default (Lstove/spring/example/infrastructure/Headers;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
}

public class stove/spring/example/infrastructure/ObjectMapperConfig {
	public static final field Companion Lstove/spring/example/infrastructure/ObjectMapperConfig$Companion;
	public fun <init> ()V
	public fun jacksonCustomizer ()Lorg/springframework/boot/autoconfigure/jackson/Jackson2ObjectMapperBuilderCustomizer;
	public fun objectMapper ()Lcom/fasterxml/jackson/databind/ObjectMapper;
}

public final class stove/spring/example/infrastructure/ObjectMapperConfig$Companion {
	public final fun default ()Lcom/fasterxml/jackson/databind/ObjectMapper;
}

public class stove/spring/example/infrastructure/api/ProductController {
	public fun <init> (Lstove/spring/example/application/handlers/ProductCreator;)V
	public fun createProduct (Lstove/spring/example/application/handlers/ProductCreateRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun get (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun importFile (Ljava/lang/String;Lorg/springframework/http/codec/multipart/FilePart;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class stove/spring/example/infrastructure/couchbase/CouchbaseConfiguration {
	public static final field Companion Lstove/spring/example/infrastructure/couchbase/CouchbaseConfiguration$Companion;
	public fun <init> (Lstove/spring/example/infrastructure/couchbase/CouchbaseProperties;Lio/micrometer/core/instrument/MeterRegistry;)V
	public fun bucket (Lcom/couchbase/client/java/ReactiveCluster;)Lcom/couchbase/client/java/ReactiveBucket;
	public fun cluster (Lcom/couchbase/client/java/env/ClusterEnvironment;)Lcom/couchbase/client/java/ReactiveCluster;
	public fun clusterEnvironment ()Lcom/couchbase/client/java/env/ClusterEnvironment;
	public fun collection (Lcom/couchbase/client/java/ReactiveBucket;)Lcom/couchbase/client/java/ReactiveCollection;
}

public final class stove/spring/example/infrastructure/couchbase/CouchbaseConfiguration$Companion {
	public final fun getObjectMapper ()Lcom/fasterxml/jackson/databind/ObjectMapper;
}

public final class stove/spring/example/infrastructure/couchbase/CouchbaseProperties {
	public fun <init> ()V
	public final fun getBucketName ()Ljava/lang/String;
	public final fun getConnectTimeout ()J
	public final fun getHosts ()Ljava/util/List;
	public final fun getKvTimeout ()J
	public final fun getPassword ()Ljava/lang/String;
	public final fun getQueryTimeout ()J
	public final fun getUsername ()Ljava/lang/String;
	public final fun getViewTimeout ()J
	public final fun setBucketName (Ljava/lang/String;)V
	public final fun setConnectTimeout (J)V
	public final fun setHosts (Ljava/util/List;)V
	public final fun setKvTimeout (J)V
	public final fun setPassword (Ljava/lang/String;)V
	public final fun setQueryTimeout (J)V
	public final fun setUsername (Ljava/lang/String;)V
	public final fun setViewTimeout (J)V
}

public final class stove/spring/example/infrastructure/http/ClientConfigurationProperty {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/net/URI;IJ)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/net/URI;IJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/net/URI;
	public final fun component3 ()I
	public final fun component4 ()J
	public final fun copy (Ljava/lang/String;Ljava/net/URI;IJ)Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;
	public static synthetic fun copy$default (Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;Ljava/lang/String;Ljava/net/URI;IJILjava/lang/Object;)Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConnectTimeout ()I
	public final fun getReadTimeout ()J
	public final fun getUri ()Ljava/net/URI;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun setConnectTimeout (I)V
	public final fun setReadTimeout (J)V
	public final fun setUrl (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public class stove/spring/example/infrastructure/http/SupplierHttpService : stove/spring/example/application/services/SupplierService {
	public fun <init> (Lorg/springframework/web/reactive/function/client/WebClient;)V
	public fun getSupplierPermission (JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class stove/spring/example/infrastructure/http/WebClientConfiguration {
	public static final field Companion Lstove/spring/example/infrastructure/http/WebClientConfiguration$Companion;
	public fun <init> (Lstove/spring/example/infrastructure/http/WebClientConfigurationProperties;)V
	public fun exchangeStrategies (Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/springframework/web/reactive/function/client/ExchangeStrategies;
	public fun supplierHttpClient (Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/web/reactive/function/client/WebClient;
	public fun webClientObjectMapper ()Lcom/fasterxml/jackson/databind/ObjectMapper;
}

public final class stove/spring/example/infrastructure/http/WebClientConfiguration$Companion {
}

public final class stove/spring/example/infrastructure/http/WebClientConfigurationProperties {
	public fun <init> ()V
	public fun <init> (Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;)V
	public synthetic fun <init> (Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;
	public final fun copy (Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;)Lstove/spring/example/infrastructure/http/WebClientConfigurationProperties;
	public static synthetic fun copy$default (Lstove/spring/example/infrastructure/http/WebClientConfigurationProperties;Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;ILjava/lang/Object;)Lstove/spring/example/infrastructure/http/WebClientConfigurationProperties;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSupplierHttp ()Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;
	public fun hashCode ()I
	public final fun setSupplierHttp (Lstove/spring/example/infrastructure/http/ClientConfigurationProperty;)V
	public fun toString ()Ljava/lang/String;
}

public final class stove/spring/example/infrastructure/messaging/kafka/KafkaOutgoingMessage {
	public fun <init> (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Object;
	public final fun component3 ()Ljava/lang/Object;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Ljava/lang/Integer;
	public final fun copy (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Integer;)Lstove/spring/example/infrastructure/messaging/kafka/KafkaOutgoingMessage;
	public static synthetic fun copy$default (Lstove/spring/example/infrastructure/messaging/kafka/KafkaOutgoingMessage;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Integer;ILjava/lang/Object;)Lstove/spring/example/infrastructure/messaging/kafka/KafkaOutgoingMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeaders ()Ljava/util/Map;
	public final fun getKey ()Ljava/lang/Object;
	public final fun getPartition ()Ljava/lang/Integer;
	public final fun getPayload ()Ljava/lang/Object;
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class stove/spring/example/infrastructure/messaging/kafka/KafkaProducer {
	public fun <init> (Lorg/springframework/kafka/core/KafkaTemplate;)V
	public fun send (Lstove/spring/example/infrastructure/messaging/kafka/KafkaOutgoingMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class stove/spring/example/infrastructure/messaging/kafka/configuration/ConsumerSettings : stove/spring/example/infrastructure/messaging/kafka/configuration/MapBasedSettings {
}

public class stove/spring/example/infrastructure/messaging/kafka/configuration/DefaultConsumerSettings : stove/spring/example/infrastructure/messaging/kafka/configuration/ConsumerSettings {
	public static final field AUTO_COMMIT_INTERVAL J
	public static final field Companion Lstove/spring/example/infrastructure/messaging/kafka/configuration/DefaultConsumerSettings$Companion;
	public static final field MAX_POLL_INTERVAL J
	public static final field SESSION_TIMEOUT J
	public fun <init> (Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties;)V
	public fun getKafkaProperties ()Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties;
	public fun settings ()Ljava/util/Map;
}

public final class stove/spring/example/infrastructure/messaging/kafka/configuration/DefaultConsumerSettings$Companion {
}

public class stove/spring/example/infrastructure/messaging/kafka/configuration/DefaultProducerSettings : stove/spring/example/infrastructure/messaging/kafka/configuration/ProducerSettings {
	public fun <init> (Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties;)V
	public fun settings ()Ljava/util/Map;
}

public class stove/spring/example/infrastructure/messaging/kafka/configuration/KafkaConsumerConfiguration {
	public static final field Companion Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaConsumerConfiguration$Companion;
	public static final field INTERVAL J
	public static final field LISTENER_BEAN_NAME Ljava/lang/String;
	public static final field RETRY_LISTENER_BEAN_NAME Ljava/lang/String;
	public fun <init> (Lorg/springframework/kafka/listener/RecordInterceptor;)V
	public fun consumerFactory (Lstove/spring/example/infrastructure/messaging/kafka/configuration/ConsumerSettings;)Lorg/springframework/kafka/core/ConsumerFactory;
	public fun consumerRetryFactory (Lstove/spring/example/infrastructure/messaging/kafka/configuration/ConsumerSettings;)Lorg/springframework/kafka/core/ConsumerFactory;
	public fun kafkaListenerContainerFactory (Lorg/springframework/kafka/core/ConsumerFactory;)Lorg/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory;
	public fun kafkaRetryListenerContainerFactory (Lorg/springframework/kafka/core/ConsumerFactory;)Lorg/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory;
}

public final class stove/spring/example/infrastructure/messaging/kafka/configuration/KafkaConsumerConfiguration$Companion {
}

public class stove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProducerConfiguration {
	public fun <init> ()V
	public fun kafkaTemplate (Lorg/springframework/kafka/core/ProducerFactory;)Lorg/springframework/kafka/core/KafkaTemplate;
	public fun producer (Lorg/springframework/kafka/core/ProducerFactory;)Lorg/apache/kafka/clients/producer/Producer;
	public fun producerFactory (Lstove/spring/example/infrastructure/messaging/kafka/configuration/ProducerSettings;)Lorg/springframework/kafka/core/ProducerFactory;
}

public final class stove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties {
	public static final field Companion Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Z
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Z
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties;
	public static synthetic fun copy$default (Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZILjava/lang/Object;)Lstove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties;
	public final fun createClientId ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAcks ()Ljava/lang/String;
	public final fun getAutoCreateTopics ()Z
	public final fun getBootstrapServers ()Ljava/lang/String;
	public final fun getCompression ()Ljava/lang/String;
	public final fun getDefaultApiTimeout ()Ljava/lang/String;
	public final fun getHeartbeatInSeconds ()I
	public final fun getMaxProducerConsumerBytes ()Ljava/lang/String;
	public final fun getOffset ()Ljava/lang/String;
	public final fun getRequestTimeout ()Ljava/lang/String;
	public final fun getSecureKafka ()Z
	public final fun getTopicPrefix ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun setAcks (Ljava/lang/String;)V
	public final fun setAutoCreateTopics (Z)V
	public final fun setBootstrapServers (Ljava/lang/String;)V
	public final fun setCompression (Ljava/lang/String;)V
	public final fun setDefaultApiTimeout (Ljava/lang/String;)V
	public final fun setHeartbeatInSeconds (I)V
	public final fun setOffset (Ljava/lang/String;)V
	public final fun setRequestTimeout (Ljava/lang/String;)V
	public final fun setSecureKafka (Z)V
	public final fun setTopicPrefix (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class stove/spring/example/infrastructure/messaging/kafka/configuration/KafkaProperties$Companion {
}

public abstract interface class stove/spring/example/infrastructure/messaging/kafka/configuration/MapBasedSettings {
	public abstract fun settings ()Ljava/util/Map;
}

public abstract interface class stove/spring/example/infrastructure/messaging/kafka/configuration/ProducerSettings : stove/spring/example/infrastructure/messaging/kafka/configuration/MapBasedSettings {
}

public final class stove/spring/example/infrastructure/messaging/kafka/consumers/BusinessException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lstove/spring/example/infrastructure/messaging/kafka/consumers/BusinessException;
	public static synthetic fun copy$default (Lstove/spring/example/infrastructure/messaging/kafka/consumers/BusinessException;Ljava/lang/String;ILjava/lang/Object;)Lstove/spring/example/infrastructure/messaging/kafka/consumers/BusinessException;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class stove/spring/example/infrastructure/messaging/kafka/consumers/ConsumerConfig {
	public fun <init> ()V
	public fun <init> (ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getEnabled ()Z
	public fun getErrorTopicSuffix ()Ljava/lang/String;
	public fun getGroupId ()Ljava/lang/String;
	public fun getRetryTopicSuffix ()Ljava/lang/String;
	public fun setEnabled (Z)V
	public fun setErrorTopicSuffix (Ljava/lang/String;)V
	public fun setGroupId (Ljava/lang/String;)V
	public fun setRetryTopicSuffix (Ljava/lang/String;)V
}

public final class stove/spring/example/infrastructure/messaging/kafka/consumers/CreateProductCommand {
	public fun <init> (JLjava/lang/String;J)V
	public final fun component1 ()J
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()J
	public final fun copy (JLjava/lang/String;J)Lstove/spring/example/infrastructure/messaging/kafka/consumers/CreateProductCommand;
	public static synthetic fun copy$default (Lstove/spring/example/infrastructure/messaging/kafka/consumers/CreateProductCommand;JLjava/lang/String;JILjava/lang/Object;)Lstove/spring/example/infrastructure/messaging/kafka/consumers/CreateProductCommand;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()J
	public final fun getName ()Ljava/lang/String;
	public final fun getSupplierId ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class stove/spring/example/infrastructure/messaging/kafka/consumers/FailingEvent {
	public fun <init> (J)V
	public final fun component1 ()J
	public final fun copy (J)Lstove/spring/example/infrastructure/messaging/kafka/consumers/FailingEvent;
	public static synthetic fun copy$default (Lstove/spring/example/infrastructure/messaging/kafka/consumers/FailingEvent;JILjava/lang/Object;)Lstove/spring/example/infrastructure/messaging/kafka/consumers/FailingEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class stove/spring/example/infrastructure/messaging/kafka/consumers/FailingProductCreateConsumer {
	public fun <init> ()V
	public fun listen (Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V
}

public class stove/spring/example/infrastructure/messaging/kafka/consumers/ProductCreateEventTopicConfig : stove/spring/example/infrastructure/messaging/kafka/consumers/TopicConfig {
	public fun <init> ()V
}

public class stove/spring/example/infrastructure/messaging/kafka/consumers/ProductFailingEventTopicConfig : stove/spring/example/infrastructure/messaging/kafka/consumers/TopicConfig {
	public fun <init> ()V
}

public class stove/spring/example/infrastructure/messaging/kafka/consumers/ProductTransferConsumers {
	public fun <init> (Lstove/spring/example/application/handlers/ProductCreator;Lcom/fasterxml/jackson/databind/ObjectMapper;)V
	public fun listen (Lorg/apache/kafka/clients/consumer/ConsumerRecord;)Ljava/lang/String;
}

public abstract class stove/spring/example/infrastructure/messaging/kafka/consumers/TopicConfig {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getErrorTopic ()Ljava/lang/String;
	public final fun getRetryTopic ()Ljava/lang/String;
	public final fun getTopic ()Ljava/lang/String;
	public final fun setErrorTopic (Ljava/lang/String;)V
	public final fun setRetryTopic (Ljava/lang/String;)V
	public final fun setTopic (Ljava/lang/String;)V
}

public class stove/spring/example/infrastructure/messaging/kafka/interceptors/CustomConsumerInterceptor : org/springframework/kafka/listener/RecordInterceptor {
	public fun <init> ()V
	public fun intercept (Lorg/apache/kafka/clients/consumer/ConsumerRecord;Lorg/apache/kafka/clients/consumer/Consumer;)Lorg/apache/kafka/clients/consumer/ConsumerRecord;
}

public final class stove/spring/example/infrastructure/messaging/kafka/interceptors/CustomProducerInterceptor : org/apache/kafka/clients/producer/ProducerInterceptor {
	public static final field Companion Lstove/spring/example/infrastructure/messaging/kafka/interceptors/CustomProducerInterceptor$Companion;
	public fun <init> ()V
	public fun close ()V
	public fun configure (Ljava/util/Map;)V
	public fun onAcknowledgement (Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V
	public fun onSend (Lorg/apache/kafka/clients/producer/ProducerRecord;)Lorg/apache/kafka/clients/producer/ProducerRecord;
}

public final class stove/spring/example/infrastructure/messaging/kafka/interceptors/CustomProducerInterceptor$Companion {
}

